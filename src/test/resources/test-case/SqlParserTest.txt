[sql-010:simple]
select 'a','b' from t

[sql-010:simple:find-all-tables]
t

[sql-010:simple:tree]
`STATEMENT`
 ├─ `SELECT`
 │  ├─ `COLUMN`
 │  │  └─ `EXPR`
 │  │     └─ 'a'
 │  └─ `COLUMN`
 │     └─ `EXPR`
 │        └─ 'b'
 └─ `FROM`
    └─ `TABLE`
       └─ `NAME`
          └─ t

[sql-011:select-distinct]
SELECT DISTINCT Country FROM Customers

[sql-011:select-distinct:tree]
 `STATEMENT`
 ├─ `SELECT`
 │  └─ `COLUMN`
 │     └─ `EXPR`
 │        └─ DISTINCT Country
 └─ `FROM`
    └─ `TABLE`
       └─ `NAME`
          └─ Customers

[sql-012:select-distinct]
SELECT COUNT(DISTINCT Country) FROM Customers

[sql-012:select-distinct:tree]
`STATEMENT`
 ├─ `SELECT`
 │  └─ `COLUMN`
 │     └─ `EXPR`
 │        └─ COUNT ( DISTINCT Country )
 └─ `FROM`
    └─ `TABLE`
       └─ `NAME`
          └─ Customers

[sql-013:select-distinct]
SELECT Count(*) AS DistinctCountries
FROM (SELECT DISTINCT Country FROM Customers)

[sql-013:select-distinct:tree]
 `STATEMENT`
 ├─ `SELECT`
 │  └─ `COLUMN`
 │     ├─ `EXPR`
 │     │  └─ Count ( * )
 │     └─ `NAME`
 │        └─ DistinctCountries
 └─ `FROM`
    └─ `TABLE`
       └─ `STATEMENT`
          ├─ `SELECT`
          │  └─ `COLUMN`
          │     └─ `EXPR`
          │        └─ DISTINCT Country
          └─ `FROM`
             └─ `TABLE`
                └─ `NAME`
                   └─ Customers

[sql-015:simple]
SELECT 'a' as a,b,'c' FROM t

[sql-015:simple:find-all-tables]
t

[sql-015:simple:tree]
`STATEMENT`
 ├─ `SELECT`
 │  ├─ `COLUMN`
 │  │  ├─ `EXPR`
 │  │  │  └─ 'a'
 │  │  └─ `NAME`
 │  │     └─ a
 │  ├─ `COLUMN`
 │  │  └─ `EXPR`
 │  │     └─ b
 │  └─ `COLUMN`
 │     └─ `EXPR`
 │        └─ 'c'
 └─ `FROM`
    └─ `TABLE`
       └─ `NAME`
          └─ t

[sql-020:comment]
/*TEST COMMENT*/
select
  'a' --SingleLineComment
  ,'b'
from t

[sql-020:comment:tree]
 `STATEMENT`
 ├─ `SELECT`
 │  ├─ `COLUMN`
 │  │  └─ `EXPR`
 │  │     └─ 'a'
 │  └─ `COLUMN`
 │     └─ `EXPR`
 │        └─ 'b'
 └─ `FROM`
    └─ `TABLE`
       └─ `NAME`
          └─ t


[sql-030:EXPR]
select 'a',substr(b, 1, 2),'c', b * (a + nullif(ifnull(b, 0), c)) from t

 `STATEMENT`
 ├─ `SELECT`
 │  ├─ `COLUMN`
 │  │  └─ `EXPR`
 │  │     └─ 'a'
 │  ├─ `COLUMN`
 │  │  └─ `EXPR`
 │  │     └─ substr ( b , 1 , 2 )
 │  ├─ `COLUMN`
 │  │  └─ `EXPR`
 │  │     └─ 'c'
 │  └─ `COLUMN`
 │     └─ `EXPR`
 │        └─ b * ( a + nullif ( ifnull ( b , 0 ) , c ) )
 └─ `FROM`
    └─ `TABLE`
       └─ `NAME`
          └─ t

[sql-031:EXPR]
select 'a',substr(f(b, 1), 2) as b,'c' from t


[sql-031:EXPR:tree]
`STATEMENT`
 ├─ `SELECT`
 │  ├─ `COLUMN`
 │  │  └─ `EXPR`
 │  │     └─ 'a'
 │  ├─ `COLUMN`
 │  │  ├─ `EXPR`
 │  │  │  └─ substr ( f ( b , 1 ) , 2 )
 │  │  └─ `NAME`
 │  │     └─ b
 │  └─ `COLUMN`
 │     └─ `EXPR`
 │        └─ 'c'
 └─ `FROM`
    └─ `TABLE`
       └─ `NAME`
          └─ t

[sql-032:EXPR]
select x as x, y as y1, f(x,y,0) as z from a as A, b

[sql-032:EXPR:find-all-tables]
A, b

[sql-032:EXPR:result-columns]
x, y1, z


[sql-035:where]
SELECT * FROM Customers
WHERE NOT Country='Germany' AND NOT Country='USA'

[sql-035:where:tree]
 `STATEMENT`
 ├─ `SELECT`
 │  └─ `COLUMN`
 │     └─ `EXPR`
 │        └─ *
 ├─ `FROM`
 │  └─ `TABLE`
 │     └─ `NAME`
 │        └─ Customers
 └─ `WHERE`
    └─ NOT Country = 'Germany' AND NOT Country = 'USA'

[sql-036:where]
SELECT LastName, FirstName, Address FROM Persons
WHERE Address IS NOT NULL

[sql-036:where:tree]
 `STATEMENT`
 ├─ `SELECT`
 │  ├─ `COLUMN`
 │  │  └─ `EXPR`
 │  │     └─ LastName
 │  ├─ `COLUMN`
 │  │  └─ `EXPR`
 │  │     └─ FirstName
 │  └─ `COLUMN`
 │     └─ `EXPR`
 │        └─ Address
 ├─ `FROM`
 │  └─ `TABLE`
 │     └─ `NAME`
 │        └─ Persons
 └─ `WHERE`
    └─ Address IS NOT NULL

[sql-037:where]
SELECT t.a,d,max(b) as max_b,sum(c) as sum_c
FROM t
WHERE t.a IS NOT NULL
  and b like '%'
  and (c > 1 or c < 1)
  and not ( c >= 1 and c <= 1)
  and c != 1
  and c =1
  and c in (1,2,3)
  and c between 1 and 3
group by t.a,d
--having max(b)>100
order by max(t.b) desc, sum(c) asc

[sql-037:where:tree]
 `STATEMENT`
 ├─ `SELECT`
 │  ├─ `COLUMN`
 │  │  └─ `EXPR`
 │  │     └─ t.a
 │  ├─ `COLUMN`
 │  │  └─ `EXPR`
 │  │     └─ d
 │  ├─ `COLUMN`
 │  │  ├─ `EXPR`
 │  │  │  └─ max ( b )
 │  │  └─ `NAME`
 │  │     └─ max_b
 │  └─ `COLUMN`
 │     ├─ `EXPR`
 │     │  └─ sum ( c )
 │     └─ `NAME`
 │        └─ sum_c
 ├─ `FROM`
 │  └─ `TABLE`
 │     └─ `NAME`
 │        └─ t
 ├─ `WHERE`
 │  └─ t.a IS NOT NULL and b like '%' and ( c > 1 or c < 1 ) and not ( c >= 1 and c <= 1 ) and c != 1 and c = 1 and c in ( 1 , 2 , 3 ) and c between 1 and 3
 ├─ `GROUP-BY`
 │  ├─ `EXPR`
 │  │  └─ t.a
 │  └─ `EXPR`
 │     └─ d
 └─ `ORDER-BY`
    ├─ `EXPR`
    │  └─ max ( t.b ) desc
    └─ `EXPR`
       └─ sum ( c ) asc

[sql-040:join]
select
  x,sum(y) as y
from t
left join t1
  on 1=1
right join t2
  on 1>2 and 1<3
where 1=1 or 1=2
group     by 1,       f(x)
order by 1 asc, 2 desc

[sql-040:join:find-all-tables]
t, t1, t2

[sql-040:join:result-columns]
x, y

[sql-040:join:tree]
`STATEMENT`
 ├─ `SELECT`
 │  ├─ `COLUMN`
 │  │  └─ `EXPR`
 │  │     └─ x
 │  └─ `COLUMN`
 │     ├─ `EXPR`
 │     │  └─ sum ( y )
 │     └─ `NAME`
 │        └─ y
 ├─ `FROM`
 │  └─ `TABLE`
 │     └─ `NAME`
 │        └─ t
 ├─ `LEFT-JOIN`
 │  ├─ `TABLE`
 │  │  └─ `NAME`
 │  │     └─ t1
 │  └─ `ON`
 │     └─ 1 = 1
 ├─ `RIGHT-JOIN`
 │  ├─ `TABLE`
 │  │  └─ `NAME`
 │  │     └─ t2
 │  └─ `ON`
 │     └─ 1 > 2 and 1 < 3
 ├─ `WHERE`
 │  └─ 1 = 1 or 1 = 2
 ├─ `GROUP-BY`
 │  ├─ `EXPR`
 │  │  └─ 1
 │  └─ `EXPR`
 │     └─ f ( x )
 └─ `ORDER-BY`
    ├─ `EXPR`
    │  └─ 1 asc
    └─ `EXPR`
       └─ 2 desc

[sql-050:subquery]
select a from (select b from t2) t1

[sql-050:subquery:find-all-tables]
t2

[sql-050:subquery:result-columns]
a

[sql-050:subquery:tree]
`STATEMENT`
 ├─ `SELECT`
 │  └─ `COLUMN`
 │     └─ `EXPR`
 │        └─ a
 └─ `FROM`
    └─ `TABLE`
       ├─ `STATEMENT`
       │  ├─ `SELECT`
       │  │  └─ `COLUMN`
       │  │     └─ `EXPR`
       │  │        └─ b
       │  └─ `FROM`
       │     └─ `TABLE`
       │        └─ `NAME`
       │           └─ t2
       └─ `NAME`
          └─ t1






[sql-060:sub-query]
select a from (select b from (select c from t1) t2) t3

[sql-060:sub-query:find-all-tables]
t1

[sql-060:sub-query:result-columns]
a

[sql-060:sub-query:tree]
`STATEMENT`
 ├─ `SELECT`
 │  └─ `COLUMN`
 │     └─ `EXPR`
 │        └─ a
 └─ `FROM`
    └─ `TABLE`
       ├─ `STATEMENT`
       │  ├─ `SELECT`
       │  │  └─ `COLUMN`
       │  │     └─ `EXPR`
       │  │        └─ b
       │  └─ `FROM`
       │     └─ `TABLE`
       │        ├─ `STATEMENT`
       │        │  ├─ `SELECT`
       │        │  │  └─ `COLUMN`
       │        │  │     └─ `EXPR`
       │        │  │        └─ c
       │        │  └─ `FROM`
       │        │     └─ `TABLE`
       │        │        └─ `NAME`
       │        │           └─ t1
       │        └─ `NAME`
       │           └─ t2
       └─ `NAME`
          └─ t3




[sql-065:sub-query]
select * from ( select (a+1) as a from t) t1, (select b+f(x,y) as b from (select c from t3) t2) t2 where (1=1 or 1=3) and name like '%'


[sql-065:sub-query:find-all-tables]
t, t3

[sql-065:sub-query:result-columns]
*

[sql-065:sub-query:tree]
`STATEMENT`
 ├─ `SELECT`
 │  └─ `COLUMN`
 │     └─ `EXPR`
 │        └─ *
 ├─ `FROM`
 │  ├─ `TABLE`
 │  │  ├─ `STATEMENT`
 │  │  │  ├─ `SELECT`
 │  │  │  │  └─ `COLUMN`
 │  │  │  │     ├─ `EXPR`
 │  │  │  │     │  └─ ( a + 1 )
 │  │  │  │     └─ `NAME`
 │  │  │  │        └─ a
 │  │  │  └─ `FROM`
 │  │  │     └─ `TABLE`
 │  │  │        └─ `NAME`
 │  │  │           └─ t
 │  │  └─ `NAME`
 │  │     └─ t1
 │  └─ `TABLE`
 │     ├─ `STATEMENT`
 │     │  ├─ `SELECT`
 │     │  │  └─ `COLUMN`
 │     │  │     ├─ `EXPR`
 │     │  │     │  └─ b + f ( x , y )
 │     │  │     └─ `NAME`
 │     │  │        └─ b
 │     │  └─ `FROM`
 │     │     └─ `TABLE`
 │     │        ├─ `STATEMENT`
 │     │        │  ├─ `SELECT`
 │     │        │  │  └─ `COLUMN`
 │     │        │  │     └─ `EXPR`
 │     │        │  │        └─ c
 │     │        │  └─ `FROM`
 │     │        │     └─ `TABLE`
 │     │        │        └─ `NAME`
 │     │        │           └─ t3
 │     │        └─ `NAME`
 │     │           └─ t2
 │     └─ `NAME`
 │        └─ t2
 └─ `WHERE`
    └─ ( 1 = 1 or 1 = 3 ) and name like '%'

[sql-070:case-when]
select
  (a+1) as a2,
   b2,
   (case when a=1 then 1 when a=2 then 2 else 0 end) as c2
  from (
    select
      b+f(x,g(y,z)) as b, c as c
    from (
      select c from t1
     ) t2
  ) t3

[sql-070:case-when:find-all-tables]
t1

[sql-070:case-when:result-columns]
a2, b2, c2



[sql-070:case-when:tree]
`STATEMENT`
 ├─ `SELECT`
 │  ├─ `COLUMN`
 │  │  ├─ `EXPR`
 │  │  │  └─ ( a + 1 )
 │  │  └─ `NAME`
 │  │     └─ a2
 │  ├─ `COLUMN`
 │  │  └─ `EXPR`
 │  │     └─ b2
 │  └─ `COLUMN`
 │     ├─ `EXPR`
 │     │  └─ ( case when a = 1 then 1 when a = 2 then 2 else 0 end )
 │     └─ `NAME`
 │        └─ c2
 └─ `FROM`
    └─ `TABLE`
       ├─ `STATEMENT`
       │  ├─ `SELECT`
       │  │  ├─ `COLUMN`
       │  │  │  ├─ `EXPR`
       │  │  │  │  └─ b + f ( x , g ( y , z ) )
       │  │  │  └─ `NAME`
       │  │  │     └─ b
       │  │  └─ `COLUMN`
       │  │     ├─ `EXPR`
       │  │     │  └─ c
       │  │     └─ `NAME`
       │  │        └─ c
       │  └─ `FROM`
       │     └─ `TABLE`
       │        ├─ `STATEMENT`
       │        │  ├─ `SELECT`
       │        │  │  └─ `COLUMN`
       │        │  │     └─ `EXPR`
       │        │  │        └─ c
       │        │  └─ `FROM`
       │        │     └─ `TABLE`
       │        │        └─ `NAME`
       │        │           └─ t1
       │        └─ `NAME`
       │           └─ t2
       └─ `NAME`
          └─ t3

[sql-080:with-query]
with
t_x as (
  select (a+1) as a from t1
),
t_y as (
  select b+f(x,y) as b from t2
)
select a,b,c from t_x,t_y,t1

[sql-080:with-query:find-all-tables!]
t1, t2

[sql-080:with-query:result-columns!]
a, b, c

[sql-080:with-query:tree]
`STATEMENT`
 └─ `WITH`
    ├─ `WITH-SELECT`
    │  ├─ `NAME`
    │  │  └─ t_x
    │  └─ `STATEMENT`
    │     ├─ `SELECT`
    │     │  └─ `COLUMN`
    │     │     ├─ `EXPR`
    │     │     │  └─ ( a + 1 )
    │     │     └─ `NAME`
    │     │        └─ a
    │     └─ `FROM`
    │        └─ `TABLE`
    │           └─ `NAME`
    │              └─ t1
    ├─ `WITH-SELECT`
    │  ├─ `NAME`
    │  │  └─ t_y
    │  └─ `STATEMENT`
    │     ├─ `SELECT`
    │     │  └─ `COLUMN`
    │     │     ├─ `EXPR`
    │     │     │  └─ b + f ( x , y )
    │     │     └─ `NAME`
    │     │        └─ b
    │     └─ `FROM`
    │        └─ `TABLE`
    │           └─ `NAME`
    │              └─ t2
    └─ `STATEMENT`
       ├─ `SELECT`
       │  ├─ `COLUMN`
       │  │  └─ `EXPR`
       │  │     └─ a
       │  ├─ `COLUMN`
       │  │  └─ `EXPR`
       │  │     └─ b
       │  └─ `COLUMN`
       │     └─ `EXPR`
       │        └─ c
       └─ `FROM`
          ├─ `TABLE`
          │  └─ `NAME`
          │     └─ t_x
          ├─ `TABLE`
          │  └─ `NAME`
          │     └─ t_y
          └─ `TABLE`
             └─ `NAME`
                └─ t1


[sql-090:union]
select a from t1 where a>1
union
select a from t2 where a=1
union all
select a from t3 where a=100
order by a



[sql-090:union:tree!]

[sql-091:union]
(
  select a from t1 where a>1
  union
  select a from t2 where a=1
)
union all
select a from t3 where a=100
order by a

[sql-091:union:tree!]


[sql-092:union]

select a from t1 where a>1
union
(
  select a from t2 where a=1
  union all
  select a from t3 where a=100
)
order by a

[sql-092:union:tree!]


[sql-100:create-table]
create    table qtemp/t_xxx as (
  select #a,substr(b, #start, #end), 'select * from t', rank(a partition  b) from t
)with data

[sql-100:create-table:tree]
`STATEMENT`
 ├─ `CREATE-TABLE`
 │  ├─ `NAME`
 │  │  ├─ qtemp
 │  │  ├─ /
 │  │  └─ t_xxx
 │  └─ `STATEMENT`
 │     ├─ `SELECT`
 │     │  ├─ `COLUMN`
 │     │  │  └─ `EXPR`
 │     │  │     └─ #a
 │     │  ├─ `COLUMN`
 │     │  │  └─ `EXPR`
 │     │  │     └─ substr ( b , #start , #end )
 │     │  ├─ `COLUMN`
 │     │  │  └─ `EXPR`
 │     │  │     └─ 'select * from t'
 │     │  └─ `COLUMN`
 │     │     └─ `EXPR`
 │     │        └─ rank ( a partition b )
 │     └─ `FROM`
 │        └─ `TABLE`
 │           └─ `NAME`
 │              └─ t
 └─ `WITH-DATA`

[sql-101:create-table]
CREATE TABLE qtemp/t_persons (
    PersonID int,
    LastName varchar(255),
    FirstName varchar(255),
    Address varchar(255),
    City varchar(255)
)

[sql-101:create-table:tree!]


[sql-110:insert-into]
INSERT INTO Customers (CustomerName, ContactName, Address, City, PostalCode, Country)
VALUES ('Cardinal', 'Tom B. Erichsen', 'Skagen 21', 'Stavanger', '4006', 'Norway')

[sql-110:insert-into:tree!]

[sql-111:insert-into]
INSERT INTO Customers (CustomerName, City, Country)
  SELECT CustomerName||'@'||Country, City, Country
  FROM Customers
  Where (Country='CHN' OR Country='USA')
        AND CustomerName like 'Tony%'

[sql-111:insert-into:tree]
`STATEMENT`
 └─ `INSERT-INTO`
    ├─ `TABLE`
    │  ├─ `NAME`
    │  │  └─ Customers
    │  ├─ `COLUMN`
    │  │  └─ `NAME`
    │  │     └─ CustomerName
    │  ├─ `COLUMN`
    │  │  └─ `NAME`
    │  │     └─ City
    │  └─ `COLUMN`
    │     └─ `NAME`
    │        └─ Country
    └─ `STATEMENT`
       ├─ `SELECT`
       │  ├─ `COLUMN`
       │  │  └─ `EXPR`
       │  │     └─ CustomerName || '@' || Country
       │  ├─ `COLUMN`
       │  │  └─ `EXPR`
       │  │     └─ City
       │  └─ `COLUMN`
       │     └─ `EXPR`
       │        └─ Country
       ├─ `FROM`
       │  └─ `TABLE`
       │     └─ `NAME`
       │        └─ Customers
       └─ `WHERE`
          └─ ( Country = 'CHN' OR Country = 'USA' ) AND CustomerName like 'Tony%'

[sql-120:update]
UPDATE Customers
SET ContactName = 'Alfred Schmidt'||'@'||City, City= 'Frankfurt'
WHERE CustomerID = 1

[sql-120:update:tree]
 `STATEMENT`
 ├─ `UPDATE`
 │  └─ `TABLE`
 │     └─ `NAME`
 │        └─ Customers
 ├─ `SET`
 │  ├─ `COLUMN`
 │  │  ├─ `NAME`
 │  │  │  └─ ContactName
 │  │  └─ `EXPR`
 │  │     └─ 'Alfred Schmidt' || '@' || City
 │  └─ `COLUMN`
 │     ├─ `NAME`
 │     │  └─ City
 │     └─ `EXPR`
 │        └─ 'Frankfurt'
 └─ `WHERE`
    └─ CustomerID = 1

[sql-130:delete]
DELETE FROM Customers
WHERE CustomerName='Alfreds Futterkiste'

[sql-130:delete:tree]
 `STATEMENT`
 ├─ `DELETE-FROM`
 │  └─ `TABLE`
 │     └─ `NAME`
 │        └─ Customers
 └─ `WHERE`
    └─ CustomerName = 'Alfreds Futterkiste'

[sql-131:delete]
DELETE FROM Customers

[sql-131:delete:tree]
 `STATEMENT`
 └─ `DELETE-FROM`
    └─ `TABLE`
       └─ `NAME`
          └─ Customers

[sql-132:delete]
DELETE * FROM Customers

[sql-132:delete:tree!]
 `STATEMENT`
 └─ `DELETE-FROM`
    └─ `TABLE`
       └─ `NAME`
          └─ Customers